{
	"info": {
		"_postman_id": "19041eb9-9165-4965-9120-8797b66dac66",
		"name": "19.2.1 Oracle Identity Cloud Service Factor Enrollment API - Without FV is new here",
		"description": "This API allows the user to enroll in multi-factor authentication (MFA) factors with and without factor verification.\n\nThe MFA factors supported are:\n\n- SMS\n- EMAIL\n- TOTP\n- Security Questions (With Factor Verification Only)\n- PUSH (With Factor Verification Only)\n\nThe Bypass Code factor can't be enrolled in using these APIs. A bypass code must be generated by the user using the self-service APIs or having and administrator generate a bypass code for them.\n\nNote:\nThere are Oracle Identity Cloud Service Factor Enrollment and Factor Verification Postman collections available. Download the collections and example environments with variables from the idcs-factor-enrollment-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-enrollment-api) and the idcs-factor-verification-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-verification-api) within GitHub and import them into a REST client. \n\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication Factor Enrollment - With Factor Verification",
			"item": [
				{
					"name": "SMS Enrollment",
					"item": [
						{
							"name": "Step 1: Enrolling in SMS",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"method\": \"SMS\",\r\n    \"countryCode\": \"+1\",\r\n    \"mobileNumber\": \"155...12\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors"
									]
								},
								"description": "This step initiates the user's enrollment in the SMS method. The request example shows the contents of the POST request to the /mfa/v1/users/{{userGUID}}/factors endpoint: \n\nMobile Number in the request is the mobile number that the user wants to enroll in for the SMS factor.\n\nThe response contains:\n\n- the requestState that should be passed by the client in the next step.\n- the displayName of the device being enrolled\n- a list of the method(s) being enrolled in\n- the factorID that needs to be used when resending the OTP and when activating the SMS factor.\n\nSuccess indicates that:\n\n- The userGUID that was provided is valid\n- The user is active\n- The user account isn't locked\n- The SMS factor is enabled"
							},
							"response": [
								{
									"name": "Success Response: Enrolling in SMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"method\": \"SMS\",\r\n    \"countryCode\": \"+44\",\r\n    \"mobileNumber\": \"1122334455\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "469",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Thu, 09 Aug 2018 21:48:20 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "gyZ640j4000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"factorId\": \"88178d80636a428393a5674ba46dc867\",\n    \"factorStatus\": \"ENROLLMENT_INITIATED\",\n    \"methods\": [\n        \"SMS\"\n    ],\n    \"displayName\": \"+44XXXXXXX445\",\n    \"requestState\": \"QK1.....y+OFP//0\"\n}"
								}
							]
						},
						{
							"name": "Step 1a: Resend the OTP",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"resendOtp\":true,\r\n \"requestState\": \"{{requestState}}\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors",
										"{{factorID}}"
									]
								},
								"description": "If the user doesn't receive the OTP, this example shows how to request that an OTP be resent.\n\nThe response contains:\n\n- the requestState that should be passed by the client in the next step.\n- the displayName of the device being enrolled\n- the list of method(s) being enrolled in\n- the factorID.\n\nSuccess indicates that:\n\n- The userGUID that was provided is valid\n- The user is active\n- The user account isn't locked\n- The SMS factor is enabled"
							},
							"response": [
								{
									"name": "Step 1a Response: Resend the OTP",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"resendOtp\":true,\r\n \"requestState\": \"QK1/arwFL09eEiwUQZGhjH/xlX5pWRs6I3H8qXwqzcaLGbL9zPA6RxyzxWw8jh1wHvKC4YHjt8glxRrrv4PkKIyVc6DvehIHAi4TBQzPLip+egT1KdraJUV5+Ns8qU/jNlaK2KSPJ21Azea+TkVWS42IAExD+TLMBwRmxSqMIQsQNoE6uOmsKMMt1qPOweUhEqw9Tjqd/SCwy4DobPiHoXnBj5sDVWd0/0NaAqWVJKIw0GgNvh/WFHPpxpdgIdJ5~EH6ACvIz1dTjcaM//S+cCZv//7iTdQnH+7By+OFP//0\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUIDE}}/factors/{{factorID}}",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUIDE}}",
												"factors",
												"{{factorID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "448",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Thu, 09 Aug 2018 21:49:15 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "Gz8IJ0x3000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"factorId\": \"88178d80636a428393a5674ba46dc867\",\n    \"factorStatus\": \"ENROLLMENT_INITIATED\",\n    \"methods\": [\n        \"SMS\"\n    ],\n    \"displayName\": \"+44XXXXXXX455\",\n    \"requestState\": \"+HFVV...qgMUI\"\n}"
								}
							]
						},
						{
							"name": "Step 2: Activating the SMS Factor",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"otpCode\":\"170230\",\r\n \"requestState\": \"{{requestState}}\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors",
										"{{factorID}}"
									]
								},
								"description": "This step activates the user’s SMS enrollment in a PATCH request to the /mfa/v1/users/{{userGUID}}/factors/{{factorID}} endpoint.\n\nThe client must include the following attributes:\n\n- otpCode: the code received by the user on their device\n- requestState: received in the Step 1 response\n- factorID: received in the Step 1 response\n\nSuccess indicates that:\n\n- OTP is valid\n- userGUID is valid\n- User is active\n- User account isn't locked\n- SMS factor is enabled"
							},
							"response": [
								{
									"name": "Response to Step 2: Activating the SMS Factor",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"otpCode\":\"170230\",\r\n \"requestState\": \"+HFVVMMFd1cT0Gn6GulMd+/DIcmrmCXz8ELElunS2BXWnPodOCyRZG7O...T1YQqSNHDfmrtXx5CmnqgMUI\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/589879c55b7340518141eab82493f0cc/factors/88178d80636a428393a5674ba46dc867",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"589879c55b7340518141eab82493f0cc",
												"factors",
												"88178d80636a428393a5674ba46dc867"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "20",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Thu, 09 Aug 2018 21:50:16 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "L0_lz1_4000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\"status\":\"success\"}"
								}
							]
						}
					],
					"description": "The examples in this folder walk you through the requests required for a user to enroll in the SMS factor and includes the factor verification step. \n\nFactor enrollment is a 2-step process. You first need to initiate, and then activate the factor enrollment.\n\nNote:\nThere are Oracle Identity Cloud Service Factor Enrollment and Factor Verification Postman collections available. Download the collections and example environments with variables from the idcs-factor-enrollment-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-enrollment-api) and the idcs-factor-verification-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-verification-api) within GitHub and import them into a REST client. \n\nThese steps assume that MFA is enabled and a sign-on policy is created for MFA. See the Configure Multi-Factor Authentication Settings section in the Oracle Identity Cloud Service Administrator's Guide.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7ddffa9f-ed56-4029-983d-5d6636caad3f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9ce958c3-deed-43f1-a719-d746c89a71a4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "EMAIL Enrollment",
					"item": [
						{
							"name": "Step 1: Enrolling in EMAIL",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"method\":\"EMAIL\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors"
									]
								},
								"description": "This step initiates the user's enrollment in the EMAIL method.\n\nThe request example shows the contents of the POST request to the /mfa/v1/users/{{userGUID}}/factors endpoint: \n\nThe emailID is taken from the user's profile.\n\nThe response contains:\n\n- the requestState that should be passed by the client in the next step.\n- the displayName (emailId) that is being enrolled in\n- a list of the method(s) being enrolled in\n\nSuccess indicates that:\n\n- The userGUID that was provided is valid\n- The user is active\n- The user account isn't locked\n- The EMAIL factor is enabled"
							},
							"response": [
								{
									"name": "Response to Step 1: Enrolling in EMAIL",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"method\":\"EMAIL\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "482",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Thu, 09 Aug 2018 21:52:37 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "RHxpG154000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"factorId\": \"30db2274140043918edb033d9fe29ff3\",\n    \"factorStatus\": \"ENROLLMENT_INITIATED\",\n    \"methods\": [\n        \"EMAIL\"\n    ],\n    \"displayName\": \"user1@example.com\",\n    \"requestState\": \"Vxar...bWTTA\"\n}"
								}
							]
						},
						{
							"name": "Step 1a: Resending the OTP",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"resendOtp\":true,\r\n \"requestState\": \"{{requestState}}\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors",
										"{{factorID}}"
									]
								},
								"description": "Use this request after Step 1 if the user hasn't received the time-based one-time passocde (TOTP) in an email.\r\n\r\nThe response always contains the requestState that should be passed by the client in the next step.\r\n\r\nThe response contains the displayName of the device being enrolled, lists the methods being enrolled in, and includes the factorID."
							},
							"response": [
								{
									"name": "Response to Step 1a: Resending the OTP",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"resendOtp\":true,\r\n \"requestState\": \"VxarigaENS7BzA1sYZZnApY835twbEW2kNquzH3BzZXHr0DfzaGxYrr7MlI4m7RjryvigE6iJ8sZIO8oNsoA0qprbH6cepOGE/dYSw1wfBYfkr1KdBgXpqSdrT+asUq2VVKFPNkNjP9yrPmMi4A+vsipkvEK1uAfbkgF4agUKawDVsRmZTTfgL3uXXVscshTCbzUiIOw9YtFkAapowk4bAXKSD7lELFvp9A/n6C5t0Pw8+YxhZ+WKl4OP/pgCjZD~AEaL6s+ofmJdl+dGV9kFBaKyqacCORIHPNggp+bWTTA\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors",
												"{{factorID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "461",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Thu, 09 Aug 2018 21:53:45 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "Wbq3s0g4000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"factorId\": \"30db2274140043918edb033d9fe29ff3\",\n    \"factorStatus\": \"ENROLLMENT_INITIATED\",\n    \"methods\": [\n        \"EMAIL\"\n    ],\n    \"displayName\": \"usern1@example.com\",\n    \"requestState\": \"AmgsMN.....2sk4SI\"\n}"
								}
							]
						},
						{
							"name": "Step 2: Activating the EMAIL Factor",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"otpCode\":\"942367\",\r\n \"requestState\": \"{{requestState}}\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors",
										"{{factorID}}"
									]
								},
								"description": "This step activates the user’s EMAIL enrollment in a PATCH request to the /mfa/v1/users/{{userGUID}}/factors/{{factorID}} endpoint.\n\nThe client must include the following attributes:\n\n- otpCode: the code received by the user\n- requestState: received in the Step 1 response\n- factorID: received in the Step 1 response\n\nSuccess indicates that:\n\n- OTP is valid\n- userGUID is valid\n- User is active\n- User account isn't locked\n- EMAIL factor is enabled"
							},
							"response": [
								{
									"name": "Response to Step 2: Activating the EMAIL Factor",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"otpCode\":\"942367\",\r\n \"requestState\": \"AmgsMNbx2PXzufQ+8Y+JQ/XLLIWbzBx/MNJEy868zzoFfrFAK/f0mslIKmtQDmy...r9VmcDFEkLlBBmMYhWK0Zhp7U+2sk4SI\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors",
												"{{factorID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "20",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Thu, 09 Aug 2018 21:54:39 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "7W^xI1z3000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\"status\":\"success\"}"
								}
							]
						}
					],
					"description": "The examples in this folder walk you through the requests required for a user to enroll in the EMAIL factor and includes the factor verification step. \n\nFactor enrollment is a 2-step process. You first need to initiate, and then activate the factor enrollment.\n\nNote:\nThere are Oracle Identity Cloud Service Factor Enrollment and Factor Verification Postman collections available. Download the collections and example environments with variables from the idcs-factor-enrollment-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-enrollment-api) and the idcs-factor-verification-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-verification-api) within GitHub and import them into a REST client. \n\nThese steps assume that MFA is enabled and a sign-on policy is created for MFA. See the Configure Multi-Factor Authentication Settings section in the Oracle Identity Cloud Service Administrator's Guide.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "41145b67-ed25-4b8c-a5af-e01ec2784f2f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b4193e1e-235f-48ed-a788-282ffd49424a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Offline TOTP Enrollment",
					"item": [
						{
							"name": "Step 1: Enrolling in Offline TOTP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"method\":\"TOTP\",\r\n \"offlineTOTP\":true\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors"
									]
								},
								"description": "This step initiates the user's enrollment in the Offline TOTP method. The request example shows the contents of the POST request to the /mfa/v1/users/{{userGUID}}/factors endpoint.\n\nThe offlineTOTP attribute is set to true in the request.\n\nThe response contains:\n\n- the requestState that should be passed by the client in the next step.\n- the displayName of the device being enrolled\n- a list of the method(s) being enrolled in\n- the factorID that needs to be used when resending the TOTP and when activating the Offline TOTP factor.\n\nThe QrCode content value in the response contains the QR code information in plain text and the base64 encoded image data that needs to be rendered by the client.\n\nSuccess indicates that:\n\n- The userGUID that was provided is valid\n- The user is active\n- The user account isn't locked\n- The TOTP factor is enabled"
							},
							"response": [
								{
									"name": "Response to Step 1: Enrolling in Offline TOTP",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"method\":\"TOTP\",\r\n \"offlineTOTP\":true\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "3536",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 15 Aug 2018 15:39:22 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "M1PGx056000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\"status\":\"success\",\"factorId\":\"559e64eee54b4b738ee341ca01c4b8ac\",\"factorStatus\":\"ENROLLMENT_INITIATED\",\"methods\":[\"TOTP\"],\"displayName\":\"Joe's Phone\",\"requestState\":\"dkCIfOVmFG/4Zt5PYcb9sdK6j7+qm51XiRLNZ1d5UxJLwsDEWB3.......3hD2/gRj0Rn4\",\"qrCode\":{\"content\":\"otpauth://totp/joe.bloggs%40example.com?issuer=jassi1&period=30&algorithm=SHA1&digits=6&RSA=SHA256withRSA&Deviceid=559e64eee54b4b738ee341ca01c4b8ac&RequestId=e688914e-7e24-41ca-9967-bcbb72954b58&secret=UUXLTNHW....Z6IZMSY2333Q&ServiceType=TOTP&KeyPairLength=2048&SSE=Base32\",\"imageData\":\"iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6.......4C6Cu+AugrsI7iK4i+AugrsI7iK4i+AugrvIf/kHCqAtCVZKgVsAAAAASUVORK5CYII=\",\"imageType\":\"image/png\"},\"sharedSecret\":\"UUXLTNHWLI...6IZMSY2333Q\",\"offlineTOTP\":\"true\"}"
								}
							]
						},
						{
							"name": "Step 2: Activating the Offline TOTP",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"otpCode\":\"480982\",\r\n \"requestState\": \"{{requestState}}\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors",
										"{{factorID}}"
									]
								},
								"description": "This step activates the user’s Offline TOTP enrollment in a PATCH request to the /mfa/v1/users/{{userGUID}}/factors/{{factorID}} endpoint.\n\nThe client must include the following attributes:\n\n- otpCode: the code received by the user on their device\n- requestState: received in the Step 1 response\n- factorID: received in the Step 1 response\n\nSuccess indicates that:\n\n- OTP is valid\n- userGUID is valid\n- User is active\n- User account isn't locked\n- TOTP factor is enabled"
							},
							"response": [
								{
									"name": "Response to Step 2: Activating the Offline TOTP",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"otpCode\":\"480982\",\r\n \"requestState\": \"dkCIfOVmFG/4Zt5PYcb9sdK6j7+qm51XiRLNZ1d5UxJLwsDEWB3ZM3A9o31fjGFWvD3guRQSvjbfsOiKIZ0o36qf5aIdUFK+BmjhMhG1mU12zhyy59DXlMIqaAgr1vTu0OalOcyBSmU5/i7ZNBUDjcsv4XmCdPHNQAbRaktrvcDtBhnSsYC5ry9xXOtYlca7RiCVrIDLJ6Uj1QbifitfpF2X3cv0fKx4qo+WlI3TauE~/pGiSZ32/TsyYG94j9ZYgMf59+ExOvO3hD2/gRj0Rn4\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors",
												"{{factorID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "20",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Wed, 15 Aug 2018 15:45:44 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "zFVBI1e5000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\"status\":\"success\"}"
								}
							]
						}
					],
					"description": "The examples in this folder walk you through the requests required for a user to enroll in the Offline TOTP factor and includes the factor verification step. \n\nFactor enrollment is a 2-step process. You first need to initiate, and then activate the factor enrollment.\n\nTo get a QR Code to scan for testing purposes:\nYou must copy the value of the qrCode \"content\" and use an online QR Code Generator (such as: https://www.the-qrcode-generator.com) to generate a QR Code to scan.\n\nNote:\nThere are Oracle Identity Cloud Service Factor Enrollment and Factor Verification Postman collections available. Download the collections and example environments with variables from the idcs-factor-enrollment-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-enrollment-api) and the idcs-factor-verification-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-verification-api) within GitHub and import them into a REST client. \n\nThese steps assume that MFA is enabled and a sign-on policy is created for MFA. See the Configure Multi-Factor Authentication Settings section in the Oracle Identity Cloud Service Administrator's Guide.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f0093f43-ac88-4690-9ab6-2be1470d19f0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5102eace-e7d3-425e-a3d2-1d3f1cbb8672",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Online TOTP Enrollment",
					"item": [
						{
							"name": "Step 1: Enrolling in Online TOTP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"method\":\"TOTP\",\r\n \"offlineTOTP\":\"false\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors"
									]
								},
								"description": "This step initiates the user's enrollment in the Online TOTP method. The request example shows the contents of the POST request to the /mfa/v1/users/{{userGUID}}/factors endpoint.\n\nThe response contains:\n\n- the requestState that should be passed by the client in the next step.\n- the displayName of the device being enrolled\n- a list of the method(s) being enrolled in\n- the factorID that needs to be used when resending the TOTP and when activating the Online TOTP factor.\n\nThe QrCode content value in the response contains the QR code information in plain text and the base64 encoded image data that needs to be rendered by the client.\n\nSuccess indicates that:\n\n- The userGUID that was provided is valid\n- The user is active\n- The user account isn't locked\n- The TOTP factor is enabled"
							},
							"response": [
								{
									"name": "Success Response for Step 1: Enrolling in Online TOTP",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"method\":\"TOTP\",\r\n \"offlineTOTP\":\"false\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "6540",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Thu, 13 Sep 2018 23:34:38 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "Eia5A1g0000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\"status\":\"success\",\"factorId\":\"a5286a1014a34043b4cce16eca806029\",\"factorStatus\":\"ENROLLMENT_INITIATED\",\"methods\":[\"TOTP\"],\"displayName\":\"Joe's Phone\",\"requestState\":\"3zBT19+Kq9HV9i91O3U1ahfTsBYCUjTtqsgl7VPYg5WSZtW3d....qKXC9KlpLh3aVlvvbvX5+xAlc~nSdqPm7UdokK0tJoSHWF64/utKR6DnyQHL5dj7sObxU\",\"qrCode\":{\"content\":\"oraclemobileauthenticator://totp/joe.bloggs%40example.com?issuer=jassi1&period=30&algorithm=SHA1&digits=6&RSA=SHA256withRSA&Deviceid=a5286a1014a34043b4cce16eca806029&RequestId=fe9d6fbc-f2c7-425d-bf58-55566b2a26c4&LoginURL=https%3A%2F%2Fjassi1.idcs.internal.oracle.com%3A8943%2Fsso%2Fv1%2F&OTP=eyJraWQiOiJTSU....6-4X9ZgsJcRZWw547VxzrbWq9Q8hm3-xTSe-GlnUDecYQbk1V4uwkdB3ifMw&ServiceType=TOTP&KeyPairLength=2048&SSE=Base32\",\"imageType\":\"image/png\",\"imageData\":\"iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAIA....AIhEYGQCIREBEIiEBIRCIlASEQgJAIhEYGQCIREBEIiEBIRCIlASEQgJAIhEYGQCIREBEIiEBIRCIlASEQgJAIhEYGQCIREBEKiF/RvT+NbEMto4p0AAAAASUVORK5CYII=\"}}"
								}
							]
						},
						{
							"name": "Step 1a: Polling for Online TOTP",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors",
										"{{factorID}}"
									]
								},
								"description": "This step polls for the user’s Online TOTP enrollment in a PATCH request to the /mfa/v1/users/{{userGUID}}/factors/{{factorID}} endpoint.\n\nThe client must include the following attributes:\n\n- factorID\n\nSuccess indicates that:\n\n- OTP is valid\n- userGUID is valid\n- User is active\n- User account isn't locked\n- TOTP factor is enabled"
							},
							"response": [
								{
									"name": "Pending Response for Step 1a: Polling for Online TOTP",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors",
												"{{factorID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "104",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Thu, 13 Sep 2018 23:35:16 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "oekH20x0000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\"status\":\"pending\",\"factorId\":\"a5286a1014a34043b4cce16eca806029\",\"factorStatus\":\"ENROLLMENT_INITIATED\"}"
								},
								{
									"name": "Enrolled Response for Step 1a: Polling for Online TOTP",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors",
												"{{factorID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "111",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Thu, 13 Sep 2018 23:36:25 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "v7^a2161000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\"status\":\"success\",\"factorId\":\"a5286a1014a34043b4cce16eca806029\",\"factorStatus\":\"ENROLLED\",\"methods\":[\"TOTP\"]}"
								}
							]
						}
					],
					"description": "The examples in this folder walk you through the requests required for a user to enroll in the Online TOTP factor and includes the factor verification step. \n\nFactor enrollment is a 2-step process. You first need to initiate, and then activate the factor enrollment.\n\nTo get a QR Code to scan for testing purposes:\nYou must copy the value of the qrCode \"content\" and use an online QR Code Generator (such as: https://www.the-qrcode-generator.com) to generate a QR Code to scan.\n\nNote:\nThere are Oracle Identity Cloud Service Factor Enrollment and Factor Verification Postman collections available. Download the collections and example environments with variables from the idcs-factor-enrollment-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-enrollment-api) and the idcs-factor-verification-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-verification-api) within GitHub and import them into a REST client. \n\nThese steps assume that MFA is enabled and a sign-on policy is created for MFA. See the Configure Multi-Factor Authentication Settings section in the Oracle Identity Cloud Service Administrator's Guide.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "04ea4d5b-a405-4c7c-ba74-08170cc050dc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b8e5f881-9545-46e4-b602-644b3fe99c7d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "PUSH Notification Enrollment",
					"item": [
						{
							"name": "Step 1: Enrolling in PUSH Notifications",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"method\":\"PUSH\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors"
									]
								},
								"description": "This step initiates the user's enrollment in the PUSH Notification method. The request example shows the contents of the POST request to the /mfa/v1/users/{{userGUID}}/factors endpoint.\n\nNote: When a user chooses to enroll in PUSH notifications, the user is also automatically enrolled in the TOTP factor.\n\nThe response contains:\n\n- the requestState that should be passed by the client in the next step.\n- the displayName of the device being enrolled\n- a list of the method(s) being enrolled in\n- the factorID that needs to be used when resending the TOTP and when activating the PUSH Notification factor.\n\nThe QrCode content value in the response contains the QR code information in plain text and the base64 encoded image data that needs to be rendered by the client.\n\nSuccess indicates that:\n\n- The userGUID that was provided is valid\n- The user is active\n- The user account isn't locked\n- The PUSH factor is enabled"
							},
							"response": [
								{
									"name": "Success Reponse to Step 1: Enrolling in PUSH Notifications",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"method\":\"PUSH\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "6551",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Thu, 13 Sep 2018 23:30:08 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "r9kTr081000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\"status\":\"success\",\"factorId\":\"6b6bb140859f4b98bf8de23090fb2eeb\",\"factorStatus\":\"ENROLLMENT_INITIATED\",\"methods\":[\"PUSH\",\"TOTP\"],\"displayName\":\"Joe's Phone\",\"requestState\":\"RkVaKabqMZ6I/AeKMPK0wWXxTOufpcY94eJWhT.....jkEOU5EJ0Wk0ZFxTk9EUeQdpA\",\"qrCode\":{\"content\":\"oraclemobileauthenticator://totp/joe.bloggs%40example.com?issuer=jassi1&period=30&algorithm=SHA1&digits=6&RSA=SHA256withRSA&Deviceid=6b6bb140859f4b98bf8de23090fb2eeb&RequestId=39419f7f-8788-4a69-a5ff-92e58bdb5b20&LoginURL=https%3A%2F%2Fjassi1.idcs.internal.oracle.com%3A8943%2Fsso%2Fv1%2F&OTP=eyJraWQiOiJTSUdOSU5HX0tFWSIsIn.....WB_Mn2bCr8sy0ILrSTx2A&ServiceType=TOTP%2BPUSH&KeyPairLength=2048&SSE=Base32\",\"imageType\":\"image/png\",\"imageData\":\"iVBORw0......IQEhEIiUBIRCAkAiERgZAIhEQEQiIQEhEIiUBIRCAk+vn6P47o563S5mwdAAAAAElFTkSuQmCC\"}}"
								}
							]
						},
						{
							"name": "Step 1a: Polling for PUSH",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors",
										"{{factorID}}"
									]
								},
								"description": "This step polls for the user’s PUSH Notifications enrollment in a PATCH request to the /mfa/v1/users/{{userGUID}}/factors/{{factorID}} endpoint.\n\nThe client must include the following attributes:\n\n- factorID\n\nSuccess indicates that:\n\n- OTP is valid\n- userGUID is valid\n- User is active\n- User account isn't locked\n- PUSH factor is enabled"
							},
							"response": [
								{
									"name": "Enrolled Success Response for Step 1a: Polling for PUSH",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors",
												"{{factorID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "118",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Thu, 13 Sep 2018 23:33:41 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "piINJ0o1000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\"status\":\"success\",\"factorId\":\"6b6bb140859f4b98bf8de23090fb2eeb\",\"factorStatus\":\"ENROLLED\",\"methods\":[\"PUSH\",\"TOTP\"]}"
								},
								{
									"name": "Pending Response to Step 1a: Polling for PUSH",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors",
												"{{factorID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate",
											"name": "Cache-control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Content-length",
											"value": "104",
											"name": "Content-length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-type",
											"value": "application/json",
											"name": "Content-type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 07 Sep 2018 20:41:29 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Proxy-agent",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Proxy-agent",
											"description": "Custom header"
										},
										{
											"key": "Server",
											"value": "Oracle-Traffic-Director/11.1.1.9",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
											"name": "Via",
											"description": "Informs the client of proxies through which the response was sent."
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff",
											"name": "X-content-type-options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "1ROLn0nA000000000",
											"name": "X-oracle-dms-ecid",
											"description": "Custom header"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1",
											"name": "X-oracle-dms-rid",
											"description": "Custom header"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block",
											"name": "X-xss-protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\"status\":\"pending\",\"factorId\":\"92b4d0b8dc294118bebbfe4936534c4a\",\"factorStatus\":\"ENROLLMENT_INITIATED\"}"
								}
							]
						}
					],
					"description": "The examples in this folder walk you through the requests required for a user to enroll in the PUSH Notification factor and includes the factor verification step. \n\nFactor enrollment is a 2-step process. You first need to initiate, and then activate the factor enrollment.\n\nTo get a QR Code to scan for testing purposes:\nYou must copy the value of the qrCode \"content\" and use an online QR Code Generator (such as: https://www.the-qrcode-generator.com) to generate a QR Code to scan.\n\nNote:\nThere are Oracle Identity Cloud Service Factor Enrollment and Factor Verification Postman collections available. Download the collections and example environments with variables from the idcs-factor-enrollment-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-enrollment-api) and the idcs-factor-verification-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-verification-api) within GitHub and import them into a REST client. \n\nThese steps assume that MFA is enabled and a sign-on policy is created for MFA. See the Configure Multi-Factor Authentication Settings section in the Oracle Identity Cloud Service Administrator's Guide.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "35d2abda-8967-4584-9fcc-248ee07c5561",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8be5f0ab-fcad-4593-9435-af97ab68da2f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Security Questions Enrollment ",
					"item": [
						{
							"name": "Step 1: Enrolling in Security Questions",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"method\":\"SECURITY_QUESTIONS\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors"
									]
								},
								"description": "This step initiates the user's enrollment in the Security Questions method. The request example shows the contents of the POST request to the /mfa/v1/users/{{userGUID}}/factors endpoint. \r\n\r\nThe response contains:\r\n\r\n- a list of the method(s) being enrolled in\r\n- the factorID that needs to be used when sending the answers to the Security Questions when activating the Security Questions factor.\r\n\r\nThe questions are returned based on the Accept-Language Header.\r\nIf not passed, it uses the server's locale.\r\n\r\nSuccess indicates that:\r\n\r\n- The userGUID that was provided is valid\r\n- The user is active\r\n- The user account isn't locked\r\n- The Security Questions factor is enabled"
							},
							"response": [
								{
									"name": "Response to Step 1: Enrolling in Security Questions",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"method\":\"SECURITY_QUESTIONS\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Oracle Identity Cloud Service"
										},
										{
											"key": "Date",
											"value": "Fri, 18 Jan 2019 11:48:42 GMT"
										},
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "BHIK8065000000000"
										},
										{
											"key": "Content-type",
											"value": "application/json"
										},
										{
											"key": "Content-length",
											"value": "1228"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"factorId\": \"SecurityQuestions\",\n    \"factorStatus\": \"ENROLLMENT_INITIATED\",\n    \"methods\": [\n        \"SECURITY_QUESTIONS\"\n    ],\n    \"securityQuestions\": [\n        {\n            \"id\": \"FavoriteBook\",\n            \"localizedText\": \"What's your favorite book?\"\n        },\n        {\n            \"id\": \"FavoriteFood\",\n            \"localizedText\": \"What's your favorite food?\"\n        },\n        {\n            \"id\": \"FavoriteToy\",\n            \"localizedText\": \"What's your favorite childhood toy?\"\n        },\n        {\n            \"id\": \"FavoriteTeam\",\n            \"localizedText\": \"What's your favorite sports team?\"\n        },\n        {\n            \"id\": \"FirstCar\",\n            \"localizedText\": \"What's the model of your first car?\"\n        },\n        {\n            \"id\": \"FirstManager\",\n            \"localizedText\": \"What's the first name of your first manager?\"\n        },\n        {\n            \"id\": \"DreamJob\",\n            \"localizedText\": \"What's your dream job?\"\n        },\n        {\n            \"id\": \"FirstMovie\",\n            \"localizedText\": \"What's the first movie you saw?\"\n        },\n        {\n            \"id\": \"FavoriteTeacher\",\n            \"localizedText\": \"What's your favorite teacher's name?\"\n        },\n        {\n            \"id\": \"FavoriteMovie\",\n            \"localizedText\": \"What's your favorite movie?\"\n        },\n        {\n            \"id\": \"MaidenName\",\n            \"localizedText\": \"What's your mother's maiden name?\"\n        },\n        {\n            \"id\": \"FirstPet\",\n            \"localizedText\": \"What's your first pet's name?\"\n        },\n        {\n            \"id\": \"ChildhoodHero\",\n            \"localizedText\": \"Who's your childhood hero?\"\n        },\n        {\n            \"id\": \"FirstTimeOnPlane\",\n            \"localizedText\": \"Where'd you go the first time you flew?\"\n        },\n        {\n            \"id\": \"FavoriteSportsPerson\",\n            \"localizedText\": \"Who's your favorite player?\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Step 2: Activating the Security Factor",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"securityQuestions\": [\r\n    {\r\n      \"id\": \"FavoriteToy\",\r\n      \"answer\": \"toy123\",\r\n      \"hintText\": \"toyhint\"\r\n    },\r\n    {\r\n      \"id\": \"FavoriteMovie\",\r\n      \"answer\": \"moviemovie\",\r\n      \"hintText\": \"moviehint\"\r\n    },\r\n     {\r\n      \"id\": \"FirstPet\",\r\n      \"answer\": \"dogTessy\",\r\n      \"hintText\": \"pethint\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/SecurityQuestions",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors",
										"SecurityQuestions"
									]
								},
								"description": "This step activates the user’s Security Questions enrollment in a PATCH request to the /mfa/v1/users/{{userGUID}}/factors/SecurityQuestions endpoint.\r\n\r\nThe client must include the factor credentials, which are the question id and answers (and optionally a hint) to the security questions that the user wants to answer.\r\n\r\nIn the response, success indicates that:\r\n\r\n- userGUID is valid\r\n- User is active\r\n- User account isn't locked\r\n- Security Questions factor is enabled"
							},
							"response": [
								{
									"name": "Response to Step 2: Activating the Security Factor",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"securityQuestions\": [\r\n    {\r\n      \"id\": \"FavoriteToy\",\r\n      \"answer\": \"toy123\",\r\n      \"hintText\": \"toyhint\"\r\n    },\r\n    {\r\n      \"id\": \"FavoriteMovie\",\r\n      \"answer\": \"moviemovie\",\r\n      \"hintText\": \"moviehint\"\r\n    },\r\n     {\r\n      \"id\": \"FirstPet\",\r\n      \"answer\": \"dogTessy\",\r\n      \"hintText\": \"pethint\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/SecurityQuestions",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors",
												"SecurityQuestions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Oracle Identity Cloud Service"
										},
										{
											"key": "Date",
											"value": "Fri, 18 Jan 2019 11:56:34 GMT"
										},
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "BHIK80B5000000000"
										},
										{
											"key": "Content-type",
											"value": "application/json"
										},
										{
											"key": "Content-length",
											"value": "20"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\"\n}"
								}
							]
						},
						{
							"name": "Step 2a: Updating the Enrolled Security  Questions Factor ",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"securityQuestions\": [\r\n    {\r\n      \"id\": \"FirstCar\",\r\n      \"answer\": \"car123\",\r\n      \"hintText\": \"carhint\",\r\n      \"op\":\"add\"\r\n    },\r\n    {\r\n      \"id\": \"FavoriteMovie\",\r\n      \"answer\": \"Harry potter\",     \r\n       \"op\":\"replace\"\r\n    },\r\n    {\r\n      \"id\": \"FavoriteToy\",     \r\n       \"op\":\"remove\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/SecurityQuestions",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors",
										"SecurityQuestions"
									]
								},
								"description": "This step updates the user’s Security Questions in a PATCH request to the /mfa/v1/users/{{userGUID}}/factors/SecurityQuestions endpoint.\r\n\r\nThe client must include the factor credentials, which are the question id and answers (and optionally a hint) to the security questions that the user wants to answer.\r\n\r\nThe op: attribute determines whether the question is to be added, replaced or removed. \r\n\r\nIn the response, success indicates that:\r\n\r\n- userGUID is valid\r\n- User is active\r\n- User account isn't locked\r\n- Security Questions factor is enabled"
							},
							"response": [
								{
									"name": "Response Step 2a: Updating the Enrolled Security  Questions Factor ",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"securityQuestions\": [\r\n    {\r\n      \"id\": \"FirstCar\",\r\n      \"answer\": \"car123\",\r\n      \"hintText\": \"carhint\",\r\n      \"op\":\"add\"\r\n    },\r\n    {\r\n      \"id\": \"FavoriteMovie\",\r\n      \"answer\": \"Harry potter\",     \r\n       \"op\":\"replace\"\r\n    },\r\n    {\r\n      \"id\": \"FavoriteToy\",     \r\n       \"op\":\"remove\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/SecurityQuestions",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors",
												"SecurityQuestions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Oracle Identity Cloud Service"
										},
										{
											"key": "Date",
											"value": "Fri, 18 Jan 2019 12:04:14 GMT"
										},
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "BHIK80F5000000000"
										},
										{
											"key": "Content-type",
											"value": "application/json"
										},
										{
											"key": "Content-length",
											"value": "20"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\"\n}"
								}
							]
						}
					],
					"description": "The examples in this folder walk you through the requests required for a user to enroll in the Security Questions factor and includes the factor verification step. \n\nFactor enrollment is a 2-step process. You first need to initiate, and then activate the factor enrollment.\n\nNote:\nThere are Oracle Identity Cloud Service Factor Enrollment and Factor Verification Postman collections available. Download the collections and example environments with variables from the idcs-factor-enrollment-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-enrollment-api) and the idcs-factor-verification-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-verification-api) within GitHub and import them into a REST client. \n\nThese steps assume that MFA is enabled and a sign-on policy is created for MFA. See the Configure Multi-Factor Authentication Settings section in the Oracle Identity Cloud Service Administrator's Guide.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7ddffa9f-ed56-4029-983d-5d6636caad3f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9ce958c3-deed-43f1-a719-d746c89a71a4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"description": "This API allows the user to enroll in multi-factor authentication (MFA) factors with factor verification.\n\nThe MFA factors supported are:\n\n- SMS\n- EMAIL\n- Online and Offline TOTP\n- Security Questions\n- PUSH\n\nThe Bypass Code factor can't be enrolled in using these APIs. A bypass code must be generated by the user using the self-service APIs or having and administrator generate a bypass code for them.\n\nNote:\nThere are Oracle Identity Cloud Service Factor Enrollment and Factor Verification Postman collections available. Download the collections and example environments with variables from the idcs-factor-enrollment-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-enrollment-api) and the idcs-factor-verification-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-verification-api) within GitHub and import them into a REST client. ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a52d41d2-6945-4710-8806-89287530fd04",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a96070b3-aa43-42cb-b7d2-b3c9a4e3bf27",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Authentication Factor Enrollment - Without Factor Verification",
			"item": [
				{
					"name": "SMS Enrollment",
					"item": [
						{
							"name": "Step 1: Enrolling in SMS",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"method\": \"SMS\",\r\n    \"countryCode\": \"+44\",\r\n    \"mobileNumber\": \"1122334455\",\r\n    \"skipFactorVerification\":\"true\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors"
									]
								},
								"description": "This step initiates the user's enrollment in the SMS method. The request example shows the contents of the POST request to the /mfa/v1/users/{{userGUID}}/factors endpoint: \r\n\r\nMobile Number in the request is the mobile number that the user wants to enroll in for the SMS factor.\r\n\r\nCountry Code in the request is the country code for the mobile number.\r\n\r\nskipFactorVerification is set to \"true\" in order to skip factor verification.\r\n\r\nThe response contains:\r\n\r\n- the displayName of the device being enrolled\r\n- a list of the method(s) being enrolled in\r\n- the factorID for SMS\r\n\r\nSuccess indicates that:\r\n\r\n- The userGUID that was provided is valid\r\n- The user is active\r\n- The user account isn't locked\r\n- The SMS factor is enabled"
							},
							"response": [
								{
									"name": "Response to Step 1: Enrolling in SMS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"method\": \"SMS\",\r\n    \"countryCode\": \"+44\",\r\n    \"mobileNumber\": \"1122334455\",\r\n    \"skipFactorVerification\":\"true\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Oracle Identity Cloud Service"
										},
										{
											"key": "Date",
											"value": "Wed, 16 Jan 2019 10:33:55 GMT"
										},
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "BHIK80x4000000000"
										},
										{
											"key": "Content-type",
											"value": "application/json"
										},
										{
											"key": "Content-length",
											"value": "141"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"factorId\": \"b0a587f8962f42259c34f64ea3e8935c\",\n    \"factorStatus\": \"ENROLLED\",\n    \"methods\": [\n        \"SMS\"\n    ],\n    \"displayName\": \"+44XXXXXXX455\"\n}"
								}
							]
						}
					],
					"description": "The examples in this folder walk you through the requests required for a user to enroll in the SMS factor without the factor verification step. \n\nNote:\nThere are Oracle Identity Cloud Service Factor Enrollment and Factor Verification Postman collections available. Download the collections and example environments with variables from the idcs-factor-enrollment-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-enrollment-api) and the idcs-factor-verification-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-verification-api) within GitHub and import them into a REST client. \n\nThese steps assume that MFA is enabled and a sign-on policy is created for MFA. See the Configure Multi-Factor Authentication Settings section in the Oracle Identity Cloud Service Administrator's Guide.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7ddffa9f-ed56-4029-983d-5d6636caad3f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9ce958c3-deed-43f1-a719-d746c89a71a4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "EMAIL Enrollment",
					"item": [
						{
							"name": "Step 1: Enrolling in EMAIL",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"method\":\"EMAIL\",\r\n \"skipFactorVerification\":\"true\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors"
									]
								},
								"description": "This step initiates the user's enrollment in the EMAIL method.\r\n\r\nThe request example shows the contents of the POST request to the /mfa/v1/users/{{userGUID}}/factors endpoint: \r\n\r\nThe emailID is taken from the user's profile.\r\n\r\nskipFactorVerification is set to \"true\" in order to skip factor verification.\r\n\r\nThe response contains:\r\n\r\n\r\n- the displayName (emailId) that is being enrolled in\r\n- a list of the method(s) being enrolled in\r\n- the factorID for EMAIL\r\n\r\n\r\nSuccess indicates that:\r\n\r\n- The userGUID that was provided is valid\r\n- The user is active\r\n- The user account isn't locked\r\n- The EMAIL factor is enabled"
							},
							"response": [
								{
									"name": "Response to Step 1: Enrolling in EMAIL",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"method\":\"EMAIL\",\r\n \"skipFactorVerification\":\"true\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Oracle Identity Cloud Service"
										},
										{
											"key": "Date",
											"value": "Fri, 18 Jan 2019 10:42:19 GMT"
										},
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "AF6kD0S9000000000"
										},
										{
											"key": "Content-type",
											"value": "application/json"
										},
										{
											"key": "Content-length",
											"value": "155"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"factorId\": \"9c02115ff1c74153b2982d12637048b9\",\n    \"factorStatus\": \"ENROLLED\",\n    \"methods\": [\n        \"EMAIL\"\n    ],\n    \"displayName\": \"joe.bloggs@example.com\"\n}"
								}
							]
						}
					],
					"description": "The examples in this folder walk you through the requests required for a user to enroll in the EMAIL factor without the factor verification step. \n\n\nNote:\nThere are Oracle Identity Cloud Service Factor Enrollment and Factor Verification Postman collections available. Download the collections and example environments with variables from the idcs-factor-enrollment-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-enrollment-api) and the idcs-factor-verification-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-verification-api) within GitHub and import them into a REST client. \n\nThese steps assume that MFA is enabled and a sign-on policy is created for MFA. See the Configure Multi-Factor Authentication Settings section in the Oracle Identity Cloud Service Administrator's Guide.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "41145b67-ed25-4b8c-a5af-e01ec2784f2f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b4193e1e-235f-48ed-a788-282ffd49424a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Offline TOTP Enrollment",
					"item": [
						{
							"name": "Step 1: Enrolling in Offline TOTP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n  \"method\":\"TOTP\",\r\n  \"sharedSecret\":\"QYV81R\", \r\n  \"otpCode\":67899\",\r\n  \"skipFactorVerification\":\"true\",\r\n  \"offlineTOTP\":\"true\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors"
									]
								},
								"description": "This step initiates the user's enrollment in the Offline TOTP method without factor verification. The request example shows the contents of the POST request to the /mfa/v1/users/{{userGUID}}/factors endpoint.\r\n\r\nThe client must pass the following attributes in the request:\r\n\r\nsharedSecret: the shared secret from where a user has previously enrolled in MFA.\r\nofflineTOTP: set to a value of \"true\"\r\nskipFactorVerification: set to a value of \"true\" in order to skip factor verification.\r\noptCode: an optional parameter but if passed, must be valid as per the shared secret.\r\n\r\n\r\nThe response contains:\r\n\r\n- the displayName of the device being enrolled\r\n- a list of the method(s) being enrolled in\r\n- the factorID for TOTP\r\n\r\nSuccess indicates that:\r\n\r\n- The userGUID that was provided is valid\r\n- The user is active\r\n- The user account isn't locked\r\n- The TOTP factor is enabled"
							},
							"response": [
								{
									"name": "Response to Step 1: Enrolling in Offline TOTP",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n  \"method\":\"TOTP\",\r\n  \"sharedSecret\":\"QYV81R\", \r\n    \"skipFactorVerification\":\"true\",\r\n  \"offlineTOTP\":\"true\"\r\n}"
										},
										"url": {
											"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"mfa",
												"v1",
												"users",
												"{{userGUID}}",
												"factors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Oracle Identity Cloud Service"
										},
										{
											"key": "Date",
											"value": "Fri, 18 Jan 2019 10:39:22 GMT"
										},
										{
											"key": "Cache-control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Expires",
											"value": "Sat, 01 Jan 2000 00:00:00 GMT"
										},
										{
											"key": "X-oracle-dms-rid",
											"value": "0:1:1"
										},
										{
											"key": "X-oracle-dms-ecid",
											"value": "AF6kD0Q9000000000"
										},
										{
											"key": "Content-type",
											"value": "application/json"
										},
										{
											"key": "Content-length",
											"value": "140"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "X-xss-protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "Via",
											"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"factorId\": \"a8346f9c0e8c412fa39f3ca5151936d8\",\n    \"factorStatus\": \"ENROLLED\",\n    \"methods\": [\n        \"TOTP\"\n    ],\n    \"displayName\": \"Joe Blogg's Phone\"\n}"
								}
							]
						}
					],
					"description": "The examples in this folder walk you through the requests required for a user to enroll in the Offline TOTP factor and includes the factor verification step. \n\nTo get a QR Code to scan for testing purposes:\nYou must copy the value of the qrCode \"content\" and use an online QR Code Generator (such as: https://www.the-qrcode-generator.com) to generate a QR Code to scan.\n\nNote:\nThere are Oracle Identity Cloud Service Factor Enrollment and Factor Verification Postman collections available. Download the collections and example environments with variables from the idcs-factor-enrollment-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-enrollment-api) and the idcs-factor-verification-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-verification-api) within GitHub and import them into a REST client. \n\nThese steps assume that MFA is enabled and a sign-on policy is created for MFA. See the Configure Multi-Factor Authentication Settings section in the Oracle Identity Cloud Service Administrator's Guide.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f0093f43-ac88-4690-9ab6-2be1470d19f0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5102eace-e7d3-425e-a3d2-1d3f1cbb8672",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"description": "This API allows the user to enroll in multi-factor authentication (MFA) factors without factor verification.\n\nThe MFA factors supported are:\n\n- SMS\n- EMAIL\n- Offline TOTP\n\n\nThe Bypass Code factor can't be enrolled in using these APIs. A bypass code must be generated by the user using the self-service APIs or having and administrator generate a bypass code for them.\n\nNote:\nThere are Oracle Identity Cloud Service Factor Enrollment and Factor Verification Postman collections available. Download the collections and example environments with variables from the idcs-factor-enrollment-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-enrollment-api) and the idcs-factor-verification-api folder (https://github.com/oracle/idm-samples/tree/master/idcs-factor-verification-api) within GitHub and import them into a REST client. ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a52d41d2-6945-4710-8806-89287530fd04",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a96070b3-aa43-42cb-b7d2-b3c9a4e3bf27",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Management",
			"item": [
				{
					"name": "Change Default Factor",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"preferredFactorId\":\"{{factorID}}\",\r\n    \"preferredMethod\":\"TOTP/EMAIL/PUSH/SMS\"\r\n}"
						},
						"url": {
							"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"mfa",
								"v1",
								"users",
								"{{userGUID}}"
							]
						},
						"description": "This is an example of how to change a user's default factor. The request example shows the contents of the PATCH request to the /mfa/v1/users/{{userGUID}} endpoint: \n\nIn the request, the client must include:\n\n- the preferredFactorId: the factorId for the factor \n- the preferredMethod: PUSH/TOTP/SMS/EMAIL\n\nSuccess indicates that:\n\n- The userGUID is valid\n- The user has enrolled in MFA\n- The user is active\n- The user account isn't locked"
					},
					"response": [
						{
							"name": "Response for Change Default Factor or Disable a Factor",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"preferredFactorId\":\"24935d44b0934b41bcbba9f9668a8723\",\r\n    \"preferredMethod\":\"TOTP\"\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-control",
									"value": "no-cache, no-store, must-revalidate",
									"name": "Cache-control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-length",
									"value": "20",
									"name": "Content-length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-type",
									"value": "application/json",
									"name": "Content-type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 17 Sep 2018 23:02:28 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "Sat, 01 Jan 2000 00:00:00 GMT",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Proxy-agent",
									"value": "Oracle-Traffic-Director/11.1.1.9",
									"name": "Proxy-agent",
									"description": "Custom header"
								},
								{
									"key": "Proxy-agent",
									"value": "Oracle-Traffic-Director/11.1.1.9",
									"name": "Proxy-agent",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Oracle-Traffic-Director/11.1.1.9",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Via",
									"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
									"name": "Via",
									"description": "Informs the client of proxies through which the response was sent."
								},
								{
									"key": "X-content-type-options",
									"value": "nosniff",
									"name": "X-content-type-options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-oracle-dms-ecid",
									"value": "tB18b0N0000000000",
									"name": "X-oracle-dms-ecid",
									"description": "Custom header"
								},
								{
									"key": "X-oracle-dms-rid",
									"value": "0:1:1",
									"name": "X-oracle-dms-rid",
									"description": "Custom header"
								},
								{
									"key": "X-xss-protection",
									"value": "1; mode=block",
									"name": "X-xss-protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"status\":\"success\"}"
						}
					]
				},
				{
					"name": "Remove a Factor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"mfa",
								"v1",
								"users",
								"{{userGUID}}",
								"factors",
								"{{factorID}}"
							]
						},
						"description": "This is an example of using the Oracle Identity Cloud Service On-Demand MFA API to remove a factor. The end user or an administrator can choose to delete one enrolled factor for a user.\n\nThe request example shows the contents of the PATCH request to the /mfa/v1/users/{{userGUID}} endpoint.\n\nIn the request, the client must provide:\n\n- the factorId for the factor that you want to remove\n- the userGUID of the user"
					},
					"response": [
						{
							"name": "Success Response for Remove User Factor",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}/factors/{{factorID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}",
										"factors",
										"{{factorID}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Cache-control",
									"value": "no-cache, no-store, must-revalidate",
									"name": "Cache-control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Date",
									"value": "Fri, 14 Sep 2018 19:05:03 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "Sat, 01 Jan 2000 00:00:00 GMT",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Proxy-agent",
									"value": "Oracle-Traffic-Director/11.1.1.9",
									"name": "Proxy-agent",
									"description": "Custom header"
								},
								{
									"key": "Proxy-agent",
									"value": "Oracle-Traffic-Director/11.1.1.9",
									"name": "Proxy-agent",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Oracle-Traffic-Director/11.1.1.9",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Via",
									"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
									"name": "Via",
									"description": "Informs the client of proxies through which the response was sent."
								},
								{
									"key": "X-content-type-options",
									"value": "nosniff",
									"name": "X-content-type-options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-oracle-dms-ecid",
									"value": "Pgdza0R1000000000",
									"name": "X-oracle-dms-ecid",
									"description": "Custom header"
								},
								{
									"key": "X-oracle-dms-rid",
									"value": "0:1:1",
									"name": "X-oracle-dms-rid",
									"description": "Custom header"
								},
								{
									"key": "X-xss-protection",
									"value": "1; mode=block",
									"name": "X-xss-protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Disable MFA",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"disableMFA\": true\r\n}"
						},
						"url": {
							"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"mfa",
								"v1",
								"users",
								"{{userGUID}}"
							]
						},
						"description": "This is an example of using the Oracle Identity Cloud Service On-Demand MFA API to un-enroll a user from Multi-Factor Authentication (MFA).\n\nThe request example shows the contents of the PATCH request to the /mfa/v1/users/{{userGUID}} endpoint. \n\nIn the request, the client must set the disableMFA attribute to true."
					},
					"response": [
						{
							"name": "Response to Disable MFA",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"disableMFA\": true\r\n}"
								},
								"url": {
									"raw": "{{HOST}}/mfa/v1/users/{{userGUID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"mfa",
										"v1",
										"users",
										"{{userGUID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-control",
									"value": "no-cache, no-store, must-revalidate",
									"name": "Cache-control",
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
								},
								{
									"key": "Content-length",
									"value": "20",
									"name": "Content-length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-type",
									"value": "application/json",
									"name": "Content-type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 17 Sep 2018 23:09:21 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Expires",
									"value": "Sat, 01 Jan 2000 00:00:00 GMT",
									"name": "Expires",
									"description": "Gives the date/time after which the response is considered stale"
								},
								{
									"key": "Pragma",
									"value": "no-cache",
									"name": "Pragma",
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
								},
								{
									"key": "Proxy-agent",
									"value": "Oracle-Traffic-Director/11.1.1.9",
									"name": "Proxy-agent",
									"description": "Custom header"
								},
								{
									"key": "Proxy-agent",
									"value": "Oracle-Traffic-Director/11.1.1.9",
									"name": "Proxy-agent",
									"description": "Custom header"
								},
								{
									"key": "Server",
									"value": "Oracle-Traffic-Director/11.1.1.9",
									"name": "Server",
									"description": "A name for the server"
								},
								{
									"key": "Via",
									"value": "1.1 net-idcs-config, 1.1 net-idcs-dev-lbr",
									"name": "Via",
									"description": "Informs the client of proxies through which the response was sent."
								},
								{
									"key": "X-content-type-options",
									"value": "nosniff",
									"name": "X-content-type-options",
									"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
								},
								{
									"key": "X-oracle-dms-ecid",
									"value": "WFYos0G0000000000",
									"name": "X-oracle-dms-ecid",
									"description": "Custom header"
								},
								{
									"key": "X-oracle-dms-rid",
									"value": "0:1:1",
									"name": "X-oracle-dms-rid",
									"description": "Custom header"
								},
								{
									"key": "X-xss-protection",
									"value": "1; mode=block",
									"name": "X-xss-protection",
									"description": "Cross-site scripting (XSS) filter"
								}
							],
							"cookie": [],
							"body": "{\"status\":\"success\"}"
						}
					]
				}
			],
			"description": "The requests in this section allow the user to manage their factors by changing their default factor, removing a factor or disabling MFA altogether.\n\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c5879e2b-543e-424b-b1a4-3cbf9170cd37",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3ee1b435-1524-45ff-98a5-47eeafccd66c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3804b2ec-c3db-45e0-9ffe-be1c480339d2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4ab31311-e914-4f0d-a4dc-d33c08cc6059",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "e99bec88-f415-4de6-bb3a-9c54575a29da",
			"key": "userGUID",
			"value": "",
			"type": "string"
		},
		{
			"id": "cacb295e-85e9-49ed-b5cf-7f7aef61c3d2",
			"key": "factorID",
			"value": "",
			"type": "string"
		},
		{
			"id": "2a64cd84-3529-4bba-ae0f-39a244f4f506",
			"key": "requestState",
			"value": "",
			"type": "string"
		}
	]
}